name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npx tsc --noEmit

    - name: Run tests
      run: npm test -- --coverage --maxWorkers=2

    - name: Upload coverage to Codecov
      if: matrix.node-version == 20
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Build project
      run: npm run build
      env:
        NEXTAUTH_SECRET: test-secret-for-ci-build-only
        NEXTAUTH_URL: http://localhost:3000

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --production --audit-level=moderate
      continue-on-error: true

    - name: Check for high/critical vulnerabilities
      run: |
        if npm audit --audit-level=high | grep -q "vulnerabilities"; then
          echo "High or critical vulnerabilities found!"
          npm audit --audit-level=high
          exit 1
        fi

  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check code formatting
      run: npx prettier --check "**/*.{ts,tsx,js,jsx,json,md}"
      continue-on-error: true

    - name: Run ESLint
      run: npm run lint -- --max-warnings 0
      continue-on-error: true
